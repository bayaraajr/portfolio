// import { useAnimations, useFBX } from "@react-three/drei";
// import { MeshProps, useFrame, useLoader } from "@react-three/fiber";
// import { FC, useEffect } from "react";
// import { Mesh, TextureLoader } from "three";
// import { GLTFLoader } from "three/examples/jsm/Addons.js";

// const InvokerKid: FC<MeshProps> = (props) => {
//     const { scene, nodes, animations } = useLoader(GLTFLoader, "/dota_2_invoker_kid/waving.glb");
//     const fbx = useFBX("/dota_2_invoker_kid/waving_gesture.fbx");

//     const { names, actions } = useAnimations(animations);

//     useEffect(() => {
//         if (names.length > 0) {
//             const name = names[0];
//             if (actions && actions[name]) {
//                 actions[name]?.play();
//             }
//         }
//         console.log(names, actions);
//     }, [names, actions]);
//     return <primitive object={scene} scale={nodes.mixamorigHips} />;
// };

// export default InvokerKid;

// /*
// Auto-generated by: https://github.com/pmndrs/gltfjsx
// */

import React, { useEffect, useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { MTLLoader } from "three/examples/jsm/Addons.js";
import { useLoader } from "@react-three/fiber";

function InvokerModel(props: any) {
    const group = useRef();
    const { nodes, materials, scene, animations } = useGLTF("/dota_2_invoker_kid/waving.glb");
    // const mtls = useLoader(MTLLoader, "/dota_2_invoker_kid/scene.mtl");

    const { names, actions } = useAnimations(animations, group);

    useEffect(() => {
        if (names.length > 0) {
            const name = names[0];
            if (actions && actions[name]) {
                actions[name]?.play();
            }
        }
        console.log(names, actions);
    }, [names, actions]);
    return (
        // <primitive object={scene} {...props} />
        <group ref={group} {...props} dispose={null}>
            <group name="Scene">
                <group name="Armature" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
                    {/* <skinnedMesh
                        name="Object_185"
                        geometry={nodes.Object_185!.geometry}
                        material={nodes.Object_185.material}
                        skeleton={nodes.Object_185.skeleton}
                    />
                    <skinnedMesh
                        name="Object_187"
                        geometry={nodes.Object_187.geometry}
                        material={nodes.Object_187.material}
                        skeleton={nodes.Object_187.skeleton}
                    />
                    <skinnedMesh
                        name="Object_189"
                        geometry={nodes.Object_189.geometry}
                        material={nodes.Object_189.material}
                        skeleton={nodes.Object_189.skeleton}
                    />
                    <skinnedMesh
                        name="Object_191"
                        geometry={nodes.Object_191.geometry}
                        material={nodes.Object_191.material}
                        skeleton={nodes.Object_191.skeleton}
                    />
                    <skinnedMesh
                        name="Object_193"
                        geometry={nodes.Object_193.geometry}
                        material={nodes.Object_193.material}
                        skeleton={nodes.Object_193.skeleton}
                    />
                    <skinnedMesh
                        name="Object_195"
                        geometry={nodes.Object_195.geometry}
                        material={nodes.Object_195.material}
                        skeleton={nodes.Object_195.skeleton}
                    />
                    <skinnedMesh
                        name="Object_197"
                        geometry={nodes.Object_197.geometry}
                        material={nodes.Object_197.material}
                        skeleton={nodes.Object_197.skeleton}
                    />
                    <skinnedMesh
                        name="Object_199"
                        geometry={nodes.Object_199.geometry}
                        material={nodes.Object_199.material}
                        skeleton={nodes.Object_199.skeleton}
                    />
                    <skinnedMesh
                        name="Object_201"
                        geometry={nodes.Object_201.geometry}
                        material={nodes.Object_201.material}
                        skeleton={nodes.Object_201.skeleton}
                    />
                    <skinnedMesh
                        name="Object_203"
                        geometry={nodes.Object_203.geometry}
                        material={nodes.Object_203.material}
                        skeleton={nodes.Object_203.skeleton}
                    />
                    <skinnedMesh
                        name="Object_205"
                        geometry={nodes.Object_205.geometry}
                        material={nodes.Object_205.material}
                        skeleton={nodes.Object_205.skeleton}
                    />
                    <primitive object={nodes.mixamorigHips} /> */}
                </group>
            </group>
        </group>
    );
}

useGLTF.preload("/dota_2_invoker_kid/scene.gltf");

export default InvokerModel;
